from textwrap import dedent

# 4, 5, 6, 7 각각 2개씩
class FewshotTemplates:
    COMPANY_INFO_MCQA: list = [
        # 4 options
        dedent("""\
        다음 문제를 읽고 정답으로 가장 알맞은 것을 고르시요.
        ### question: 엑세스바이오의 코로나 진단 제품이 주요 매출에 기여한 이유와, 해당 제품들이 미국 시장에서 어떻게 판매되고 있는지를 설명해 주세요.
        ### options:
        A. 엑세스바이오의 코로나 진단 제품은 바이러스와 관련 없는 일반적인 건강 검진용으로 개발되었으며, 미국 시장에선 주로 소비자 직거래 방식으로 판매되고 있습니다.
        B. 엑세스바이오의 코로나 진단 제품은 대규모 임상시험을 통해 효과가 입증되어, 기존 진단 키트의 80% 이상을 차지하고 있으며, 주로 소매점에서 판매되고 있습니다.
        C. 엑세스바이오의 코로나 진단 제품은 에볼라 및 기타 질병 진단에 사용되고 있으며, 미국 시장에서는 주 정부 계약을 통해 독점 판매되고 있습니다.
        D. 엑세스바이오의 코로나 진단 제품은 COVID-19의 급격한 확산에 대응하여 개발된 신속진단키트로, 주로 연간 매출액에서 99.5%를 차지하고 있습니다. 이 제품들은 미국 시장에서 의료기기 전문 유통사를 통해 판매되고 있으며, 미 FDA로부터 긴급사용승인을 획득한 덕분에 더욱 폭넓은 수요를 만나게 되었습니다.
        ### reasoning_process:
        엑세스바이오는 COVID-19 대응을 위해 신속진단키트를 개발하였으며, 이 제품이 회사 매출의 대부분을 차지하는 주요 매출원입니다.
        미국 시장에서는 의료기기 전문 유통사를 통해 제품을 공급하고 있으며, FDA의 긴급사용승인(EUA)을 받아 판매가 활발하게 이루어지고 있습니다. 따라서 D의 설명이 정확합니다.
        ### answer: A"""),
        dedent("""\
        ### question: LG전자가 최근 개발한 로봇 관련 기술은 무엇을 목표로 하고 있습니까?
        ### options:
        A. 인공지능을 통해 인간의 감정을 인식하고 대화하는 로봇 기술 개발을 목표로 하고 있습니다.  
        B. 산업 현장에서 물류와 부품을 자동화하는 로봇 팔 기술을 목표로 하고 있습니다.
        C. 상업 공간에서 청소와 관리 기능을 수행하는 자율주행 로봇 개발을 목표로 하고 있습니다.  
        D. 헬스케어 분야에서 인간의 건강 상태를 모니터링하는 로봇 기술을 목표로 하고 있습니다. 
        ### reasoning_process:
        최근 LG전자는 상업 공간에서 활용 가능한 자율주행 로봇 개발에 집중하고 있습니다.
        이 로봇은 주로 청소 및 관리 기능을 갖춘 것으로, 특히 공항, 호텔, 병원 등의 상업 시설에서 활용될 수 있는 기술을 탑재하고 있습니다.
        반면, 인간의 감정을 인식하거나 헬스케어 모니터링에 특화된 기술은 LG전자의 로봇 사업이 아닌 다른 분야에서 더 많이 다뤄집니다.
        ### answer: C"""),
        # 5 options
        dedent("""\
        ### question: HD한국조선해양이 최근 수주한 대형 프로젝트는 무엇과 관련이 있습니까?
        ### options:
        A. 북극해 항로 개척을 위한 쇄빙선 건조 프로젝트입니다.
        B. 대규모 LNG 운반선 건조 계약입니다.
        C. 중동 지역 해양 플랜트 설비 공사입니다.  
        D. 초대형 컨테이너선의 탈탄소 개조 프로젝트입니다.  
        E. 유럽 항만을 위한 자율운항 선박 개발입니다.
        ### reasoning_process:
        HD한국조선해양은 최근 대규모 LNG 운반선 수주에 성공했습니다.
        이는 전 세계적으로 에너지 수요가 높아지고, LNG의 친환경성과 안정적인 공급원으로 주목받고 있는 상황을 반영한 것입니다.
        LNG 운반선 시장은 특히 아시아와 중동 지역에서 수요가 급증하고 있으며, HD한국조선해양은 이를 겨냥해 관련 기술 개발과 수주 활동을 강화하고 있습니다.
        반면, 쇄빙선, 해양 플랜트, 자율운항 선박 등은 HD한국조선해양의 사업 영역이지만 이번 수주와는 직접적인 관련이 없습니다.
        ### answer: B"""),
        dedent("""\
        ### question: 컴투스가 최근 확장하고 있는 주요 사업 영역은 무엇입니까?
        ### options: 
        A. 전통적인 콘솔 게임 시장 진출입니다.
        B. 클라우드 기반 모바일 게임 스트리밍 서비스입니다.  
        C. 인공지능(AI)을 활용한 광고 플랫폼입니다.
        D. 가상현실(VR) 콘텐츠 전용 기기 개발입니다.
        E. 웹3.0 기술과 블록체인 기반 게임 개발입니다.   
        ### reasoning_process:
        컴투스는 최근 웹3.0 기술과 블록체인을 활용한 게임 개발을 주요 성장 전략으로 삼고 있습니다.
        특히, 블록체인 기반 게임 플랫폼 'C2X'를 통해 탈중앙화된 게임 생태계를 구축하고 있으며, 이를 통해 웹3.0 시대에 맞는 차세대 게임을 준비하고 있습니다.
        반면, 다른 선택지는 다른 기술적 트렌드를 반영하지만 컴투스의 주요 사업 확장과 직접적인 관련이 없는 영역입니다.
        ### answer: E"""),
        # 6 options
        dedent("""\
        ### question: JB금융지주는 최근 주주 환원 강화를 위해 어떤 정책을 추진 중입니까?
        ### options:
        A. 자사주 매입 후 소각을 일관되게 추진하며 주주 환원을 강화하고 있습니다.  
        B. 모든 자회사의 주식을 외부 기관에 매각하여 자본을 확충하고 있습니다.  
        C. 배당 성향을 50% 이상으로 높여 주주 배당을 확대하고 있습니다.  
        D. 자사주 매입 대신 전환사채 발행을 통해 자본 확보를 추진하고 있습니다.  
        E. 자회사를 상장하여 개별 주식으로 투자자를 유치하고 있습니다.  
        F. 대규모 자금 조달을 위해 해외 기관에 지분을 매각하고 있습니다.  
        ### reasoning_process:
        JB금융지주는 최근 자사주 매입 후 소각 정책을 통해 주주 환원 강화를 추진하고 있습니다.
        이는 주주 가치 제고를 위한 전략의 일환이며, 자본 관리 및 배당 확대 정책으로 시장의 긍정적인 평가를 받고 있습니다.
        이러한 방식은 자사주를 소각해 주주 지분 가치를 높이는 효과를 가지고 있습니다.
        ### answer: A"""),
        dedent("""\
        ### question: 한국콜마가 최근 북미 화장품 시장 공략을 위해 진행하고 있는 주요 전략은 무엇입니까?
        ### options:  
        A. 일본 시장에서 점유율을 확대하기 위해 일본 현지 파트너사와 합작 회사를 설립하였습니다.  
        B. 유럽 주요 국가에 브랜드 직영점을 개설하여 유럽 시장 진출을 가속화하고 있습니다.
        C. 북미 지역에 자외선 차단제와 기초 화장품 생산 공장을 신설하여 현지 생산을 강화하고 있습니다.
        D. 중국 북부 지역에 새로운 공장을 세우고 중국 시장의 점유율을 늘리고 있습니다.  
        E. 동남아시아 시장 공략을 위해 인도네시아에 R&D 센터를 설립하였습니다.
        F. 중동 시장에서 현지 생산을 목표로 사우디아라비아에 생산 기지를 구축하고 있습니다.  
        ### reasoning_process:
        이 문제는 한국콜마가 북미 시장을 주요 타겟으로 삼아 화장품 사업을 확장하고 있는 상황을 반영합니다.
        최근 한국콜마는 미국 펜실베이니아에 자외선 차단제와 기초 화장품을 생산할 공장을 신설하고, 북미 기술영업센터를 개설하여 현지 시장 수요와 변화에 즉각 대응할 수 있는 체제를 구축 중입니다.
        이를 통해 북미 시장에서의 경쟁력을 강화하고 있습니다.
        ### answer: C"""),
        # 7 options
        dedent("""\
        ### question: 효성티앤씨는 최근 어떤 주요 소재를 활용하여 세계 최초의 바이오 스판덱스를 상용화했습니까?
        ### options:
        A. 폐플라스틱을 재활용한 소재를 사용하였습니다.
        B. 바다에서 수거한 미세플라스틱을 활용한 소재를 사용하였습니다.  
        C. 폐기된 합성섬유에서 원료를 재사용하였습니다. 
        D. 녹조류에서 얻은 친환경 원료를 활용하였습니다.  
        E. 식물성 섬유를 이용한 소재를 사용하였습니다.
        F. 대두에서 추출한 바이오 원료를 활용하였습니다.
        G. 옥수수에서 추출한 바이오 원료를 활용하였습니다.  
        ### reasoning_process:
        이 문제는 효성티앤씨가 기존 석유 기반이 아닌 옥수수에서 추출한 친환경 바이오 원료를 사용하여 바이오 스판덱스를 개발한 최근 발표에 기반합니다.
        이 소재는 일반 섬유보다 환경에 미치는 영향을 줄일 수 있다는 점에서 큰 주목을 받고 있으며, 이는 효성의 지속 가능성 강화 노력의 일환으로 평가됩니다.
        ### answer: G"""),
        dedent("""\
        ### question: 2023년 효성은 어떤 이유로 스판덱스 생산량을 늘렸습니까?
        ### options:
        A. 패션 산업에서 신축성 있는 직물에 대한 글로벌 수요 증가 때문입니다.
        B. 의료 기기 제조로 사업을 다각화하기 위해서입니다.
        C. 나일론과 폴리에스터 같은 원자재의 과잉 공급 때문입니다.
        D. 정부의 화학 기업에 대한 인센티브에 대응하기 위해서입니다.
        E. 중전기 제품 판매 감소를 상쇄하기 위해서입니다.
        F. 컴퓨터 제조 부문에서 시장 점유율을 확대하기 위해서입니다.
        G. 해외 건설 사업 기회에 집중하기 위해서입니다.
        ### reasoning_process:
        효성은 스판덱스와 같은 합성 섬유의 주요 생산 업체로 알려져 있으며, 최근 몇 년간 패션 산업에서 신축성 있는 직물에 대한 글로벌 수요가 꾸준히 증가하고 있습니다.
        따라서 스판덱스 생산량을 늘리는 것은 이러한 시장 수요에 부응하기 위한 전략입니다.
        선택지 B, D, F, G는 스판덱스 생산 증가와 직접적인 관련이 없거나 효성의 주요 사업 방향과 거리가 있습니다.
        선택지 C의 원자재 과잉 공급은 생산량 증가의 주된 이유가 아닙니다.
        선택지 E는 다른 부문의 문제를 해결하기 위한 것으로, 스판덱스 생산 증가의 주요 동기가 되기 어렵습니다.
        ### answer: A""")
    ]

    FINANCIAL_ACCOUNTING_MCQA: list = [
        # 앞에는 설명 뒤에는 계산
        # 4 options
        dedent("""\
        ### question: 다음 중 충당부채에 대한 설명으로 맞는 것은 무엇인가?
        ### options:
        A. 충당부채는 미래에 지출될 가능성이 낮지만, 회사의 재무제표에 포함된다.
        B. 충당부채는 금액이 확정되었기 때문에 별도의 추정 과정이 필요 없다.
        C. 제품보증충당부채는 제품 판매 시점에 보증 수리 요청이 정확하게 예측된 경우에만 인식된다.
        D. 충당부채는 미래에 지출될 것이 확실하나 금액이나 시기가 확정되지 않은 부채를 의미한다.
        E. 충당부채는 주로 확정부채로 분류되며 만기와 금액이 정해져 있다.
        ### reasoning_process:
        충당부채는 미래에 발생할 것이 확실하나 그 금액이나 시기가 확정되지 않은 부채를 말한다.
        대표적인 예로는 제품보증충당부채가 있으며, 과거 경험을 바탕으로 신뢰성 있게 미래 지출을 추정해 계상한다.
        확정된 금액을 기준으로 하는 확정부채와는 구분된다. 따라서 D가 맞는 설명이다.
        ### answer: D"""),
        dedent("""\
        ### question: 다음 중 화폐의 시간가치에 관한 설명으로 옳지 않은 것은 무엇인가?
        ### options
        A. 월 복리의 경우, 매월 적용되는 이자율은 연간 명목 이자율을 1/12로 나누어 산출한다.
        B. 투자 원금 및 기타 조건이 동일할 경우, 단리 방식보다 복리 방식에서 발생하는 이자가 더 크다.
        C. 일시불로 지급될 금액의 현재 가치는 미래 가치를 일정 기간 동안 할인율을 적용해 산출할 수 있다.
        D. 1,000,000원을 연 5% 복리로 2년 동안 예치했을 경우, 만기에 받을 세전 이자는 100,000원이다.
        ### answer: D
        ### reasoning_process:
        연 5% 복리로 1,000,000원을 2년 동안 예치하면 최종 금액은 1,000,000 * (1+ 0.05)^2 = 1,102,500원이 된다.
        따라서 세전이자는 1,102,500 - 1,000,000 = 102,500원으로 100,000원이 아닙니다. 그러므로 D의 설명이 옳지 않다."""),

        # 5 options
        dedent("""\
        ### question:
        이익잉여금에 대한 설명으로 옳은 것은 무엇입니까?
        ### options:
        A. 이익잉여금은 기업의 순자산액이 법정자본액을 초과하는 부분 중, 특수한 자본거래로 발생한 잉여금입니다.  
        B. 이익잉여금은 배당이나 상여 등으로 사외에 유출된 순이익의 부분입니다.  
        C. 이익잉여금은 영업활동에서 발생한 순이익 중 사내에 유보된 부분으로, 미처분 이익잉여금과 처분필 이익잉여금으로 분류됩니다.  
        D. 이익잉여금은 기업의 특수거래에 의해 발생한 자본잉여금과 동일한 개념입니다.  
        E. 이익잉여금은 전기 이월액을 차감하고 배당 및 상여금 형태로 유출된 순이익입니다.  
        ### reasoning_process:
        이익잉여금은 기업의 영업활동에서 발생한 순이익 중에서 배당이나 상여 등으로 사외 유출되지 않고 사내에 유보된 부분을 말하며, 미처분 이익잉여금과 처분필 이익잉여금으로 분류됩니다.
        선택지 중에서 특수한 자본거래로 발생한 잉여금은 자본잉여금의 정의와 혼동된 설명입니다.
        또한, 이익잉여금이 사외 유출된 순이익이라는 설명은 잘못된 개념입니다.
        이익잉여금과 자본잉여금을 동일한 개념으로 설명한 경우 역시 이익잉여금의 정확한 정의를 잘못 이해한 것입니다.
        마지막으로, 이익잉여금이 전기 이월액을 차감하고 유출된 순이익이라는 설명도 틀렸습니다.
        ### answer: C"""),
        dedent("""\
        ### question: 유효이자율법을 적용하여 사채의 수입이자를 계산하려고 합니다. 리스 초기 장부가액이 10,000,000원이고, 유효이자율이 5%일 때 첫 해의 수입이자는 얼마입니까?
        ### options:
        A. 첫 해 수입이자는 500,000원입니다.
        B. 첫 해 수입이자는 550,000원입니다.
        C. 첫 해 수입이자는 475,000원입니다.
        D. 첫 해 수입이자는 525,000원입니다.
        E. 첫 해 수입이자는 450,000원입니다.
        ### reasoning_process:
        유효이자율법은 매기의 장부가액에 유효이자율을 곱하여 수입이자를 계산합니다.
        첫 해의 장부가액이 10,000,000원이고, 유효이자율이 5%이므로, 첫 해의 수입이자는 (10,000,000 * 0.05 = 500,000)원입니다.
        따라서 첫 해 수입이자는 500,000원이 됩니다. 다른 선택지들은 수입이자의 금액을 과대 또는 과소평가한 값입니다.
        ### answer: A"""),

        # 6 options
        dedent("""\
        ### question:
        희석계속영업이익의 산정에 필요한 요소로 적절하지 않은 것은 무엇입니까?
        ### options:
        A. 영업이익은 매출총액에서 매출원가와 판매비 및 일반관리비를 뺀 금액입니다.  
        B. 영업이익 산정 시 최근 3년간의 평균 영업이익을 기준으로 합니다.  
        C. 영업손실 평가에는 인적, 물적 시설을 갖추고 계속적으로 행해온 영업활동이 포함됩니다.  
        D. 영업이익 산정에는 영업활동 외에 발생한 기타수익도 포함됩니다.  
        E. 영업휴업 손실평가 시 인건비와 고정적 비용이 포함됩니다.  
        F. 영업폐지 손실평가에는 재고자산의 매각손실액이 고려됩니다.  
        ### reasoning_process:
        희석계속영업이익의 산정에는 주된 영업활동을 통해 발생한 영업이익이 중심이 되며, 매출총액에서 매출원가와 판매비, 일반관리비를 차감하여 계산합니다.
        최근 3년간의 평균 영업이익이 사용되며, 영업 손실 평가는 적법한 장소에서 지속된 영업 활동에 대해서만 적용됩니다.
        영업활동 외 기타수익은 포함되지 않으며, 영업휴업 손실평가 시 인건비와 고정비용도 포함됩니다.
        재고자산의 매각손실액 또한 영업폐지 손실평가에 포함되지만, 영업 외 수익은 고려되지 않습니다.
        ### answer: D"""),
        dedent("""\
        ### question: 내재이자율을 적용하여 리스 자산의 초기 공정가치를 계산하려 합니다. 리스 실행일 현재 최소리스료 총액이 8,000,000원, 무보증잔존가치가 2,000,000원이며, 리스개설직접원가가 500,000원일 때, 내재이자율이 5%라면 리스 자산의 초기 공정가치는 얼마입니까?
        ### options:
        A. 리스 자산의 초기 공정가치는 10,500,000원입니다.
        B. 리스 자산의 초기 공정가치는 9,500,000원입니다.
        C. 리스 자산의 초기 공정가치는 10,000,000원입니다.
        D. 리스 자산의 초기 공정가치는 11,000,000원입니다.
        E. 리스 자산의 초기 공정가치는 8,500,000원입니다.
        F. 리스 자산의 초기 공정가치는 9,000,000원입니다.
        ### reasoning_process:
        내재이자율을 사용하여 리스 자산의 초기 공정가치를 계산할 때, 리스 자산의 공정가치와 리스개설직접원가의 합계액이 리스 제공자가 수령하는 최소리스료와 무보증잔존가치의 합계액과 일치해야 합니다.
        최소리스료 8,000,000원과 무보증잔존가치 2,000,000원의 합계액은 10,000,000원이므로, 리스 자산의 초기 공정가치는 10,000,000원이 되어야 합니다.
        다른 선택지들은 내재이자율의 계산을 잘못 적용한 값입니다.
        ### answer: C"""),

        # 7 options
        dedent("""\
        ### question:
        다음 중 소액현금제도의 관리 절차에 대한 설명으로 옳지 않은 것은 무엇입니까?
        ### options:
        A. 소액현금제도에서는 소액현금을 지급받은 부서에서 소액현금출납장을 통해 출납 내역을 기록해야 합니다.  
        B. 소액현금출납장은 총계정원장에 의거해 수입과 지출 내역을 기재하여 예산 현황을 파악할 수 있습니다.  
        C. 소액현금은 다 사용한 후 회계과에 영수증을 첨부해 지급액을 보고해야 합니다.  
        D. 소액현금출납장은 보조부로서 소액현금 지출만을 관리하며, 수입 항목은 기록하지 않습니다.  
        E. 소액현금제도에서는 교통비나 통신비 등의 항목 외에도 필요한 항목을 추가로 작성할 수 있습니다.  
        F. 소액현금제도에서는 영수증 없이 소액경비를 자유롭게 사용할 수 있습니다.  
        G. 소액현금출납장은 연중 언제든지 소액현금의 수입 및 지출 현황을 파악할 수 있도록 기록되어야 합니다.  
        ### reasoning_process:
        소액현금제도에서는 소액경비를 지급받은 부서가 소액현금출납장을 통해 수입과 지출을 명확히 기록하며, 사용 내역을 회계과에 영수증과 함께 보고하는 절차가 필요합니다.
        출납장은 총계정원장에 의거해 기록되며, 교통비나 통신비 외에도 필요한 항목을 추가로 작성할 수 있습니다.
        소액현금출납장은 연중 언제든지 예산 현황을 확인할 수 있도록 하며, 모든 지출에 영수증이 필요합니다.
        영수증 없이 자유롭게 사용한다는 설명은 잘못된 정보입니다.
        ### answer: F"""),
        dedent("""\
        ### question: 회사가 고정자산을 직접법을 사용하여 감가상각하려고 합니다. 자산의 원가가 15,000,000원이고 매년 5,000,000원의 감가상각비가 발생한다고 할 때, 3년 후 고정자산 계정에 남아 있는 장부가액은 얼마입니까?
        ### options:
        A. 5,000,000원입니다.  
        B. 10,000,000원입니다.  
        C. 15,000,000원입니다.  
        D. 0원입니다.  
        E. 3,000,000원입니다.  
        F. 2,000,000원입니다.  
        G. 8,000,000원입니다.  
        ### reasoning_process:
        직접법은 매기의 감가상각비를 고정자산계정에서 차감하여 그 시점의 장부가액을 계산하는 방법입니다.
        자산 원가가 15,000,000원이고 매년 5,000,000원의 감가상각비가 발생하므로, 3년 후에는 총 15,000,000원 - (5,000,000원 × 3) = 0원이 남게 됩니다.
        이는 직접법으로 매년 자산가액에서 감가상각액을 직접 차감한 결과입니다. 다른 선택지들은 감가상각액을 잘못 적용하거나 누적 차감을 고려하지 않은 값입니다.
        ### answer: D"""),

    ]
    STOCK_MARKET_MCQA: list = [
        # 4 options
        dedent("""\
        ### question: 다음 중 지급준비율에 대한 설명으로 옳지 않은 것은 무엇인가?
        ### options:
        A. 지급준비율이 인상되면 은행은 의무적으로 더 많은 현금을 중앙은행에 예치해야 하므로 시중에 공급할 수 있는 자금이 줄어든다.  
        B. 지급준비율이 낮아지면 은행은 더 많은 대출을 통해 기업에 자금을 공급할 수 있는 여력이 생긴다.
        C. 지급준비율은 매달 첫째주와 셋째주 수요일에 한국은행에서 체크된다.
        D. 지급준비율은 중앙은행이 금융정책을 조절하기 위한 주요 수단 중 하나로 사용된다.
        ### reasoning_process:
        - 지급준비율은 은행이 중앙은행에 의무적으로 적립해야 하는 비율을 말하며, 이는 금융정책의 주요 수단으로 사용됩니다.
        - 지급준비율이 인상되면 시중 자금이 줄고, 낮아지면 대출 여력이 증가합니다.
        - 한국은행은 매월 둘째주와 넷째주 수요일에 지급준비금 의무 적립액을 체크하기 때문에 C는 틀린 설명입니다.
        ### answer: C"""),
        # 6 options
        dedent("""\
        ### question: 다음 중 ETF에 대한 설명으로 옳지 않은 것은 무엇입니까?
        ### options:
        A. ETF는 주식처럼 거래소에서 자유롭게 매매할 수 있는 장점을 가지고 있습니다.
        B. ETF는 개별 주식을 선택할 필요 없이 인덱스펀드의 수익률을 따라가는 투자 상품입니다. 
        C. ETF는 언제든지 시장에서 원하는 가격에 매매할 수 있으므로 환매가 불가능한 상품입니다.
        D. 최근에는 시장지수뿐만 아니라 배당주, 가치주 등 다양한 스타일을 추종하는 ETF가 상장되었습니다.  
        E. ETF는 거래소에서 실시간으로 가격이 형성되어 투자자들이 편리하게 거래할 수 있습니다.  
        F. ETF는 거래소에 상장되어 있지만 일반적인 주식과 달리 매매 시 가격 변동이 없습니다.  
        ### reasoning_process:
        ETF는 인덱스펀드가 거래소에 상장되어 주식처럼 자유롭게 매매할 수 있도록 설계된 투자 상품입니다.
        이는 개별 주식을 선택하는 번거로움을 줄이고, 언제든지 시장 가격에 따라 매매가 가능하다는 장점을 갖추고 있습니다.
        ETF는 실시간으로 가격이 변동하며 시장에서 거래되므로, 가격 변동이 없다는 설명은 잘못된 정보입니다.
        또한, 환매가 불가능하다는 설명은 정확하지 않으며, 이는 주식과 유사하게 거래된다는 것을 오해한 것입니다.
        ### answer: C"""),
        # 5 options
        dedent("""\
        ### question: 다음 중 인적분할과 물적분할에 대한 설명으로 옳지 않은 것은 무엇입니까?
        ### options:
        A. 인적분할은 신설법인의 주식을 모회사의 주주에게 같은 비율로 배분하는 방식입니다.
        B. 물적분할은 모회사가 신설법인의 주식을 모두 보유하여 지배권을 유지합니다.  
        C. 인적분할은 수직적 분할 방식이며, 모회사와 신설법인이 수직적 관계를 유지합니다.
        D. 물적분할 후 모회사는 신설법인을 자회사 형태로 보유하게 됩니다.
        E. 인적분할 후 신설법인의 주주는 모회사의 주주와 동일하게 유지됩니다.  
        ### reasoning_process:
        인적분할은 신설법인의 주식을 모회사의 주주에게 배분하여 초기에는 주주가 동일하게 유지되며, 이는 수평적 분할 구조에 해당합니다.
        물적분할에서는 모회사가 신설법인의 주식을 모두 보유하며 자회사로 분리하게 되며, 이로 인해 수직적 지배 관계를 유지합니다.
        인적분할을 수직적 분할로 설명한 내용은 잘못된 정보입니다.
        수직적 분할은 물적분할에 해당하기 때문입니다.
        ### answer: C"""),
        # 7 options
        dedent("""\
        ### question: 다음 중 우리나라 주식시장 매매 제도에 대한 기술로 맞는 것은?
        ### options: 
        A. 유가증권시장 개장 시간은 오전 10시다.
        B. 유가증권시장의 가격 제한폭은 전일 종가 대비 상하 15%이다.
        C. 코스닥시장에는 가격 제한폭이 없다.
        D. 점심시간(12~1시)에는 휴장한다.
        E. 동시호가는 폐장 시간에만 적용한다.
        F. K-OTC시장의 가격 제한폭은 전일 종가 대비 상하 30%이다.
        G. K-OTC시장의 운영시간은 09:00부터 16:00까지이다.
        ### reasoning_process:
        - 유가증권시장 개장 시간: 우리나라 유가증권시장은 오전 9시에 개장하므로, 개장 시간이 오전 10시라는 설명은 맞지 않습니다.
        - 유가증권시장의 가격 제한폭: 유가증권시장과 코스닥시장의 가격 제한폭은 전일 종가 대비 상하 30%로 적용됩니다. 가격 제한폭이 15%라는 설명은 과거의 기준으로, 현재와는 다릅니다.
        - 코스닥시장의 가격 제한폭: 코스닥시장에도 유가증권시장과 동일하게 전일 종가 대비 상하 30%의 가격 제한폭이 존재하므로, 가격 제한폭이 없다는 설명은 잘못되었습니다.
        - 점심시간 휴장 여부: 우리나라 주식시장(유가증권시장 및 코스닥시장)은 점심시간에 휴장하지 않고, 09:00부터 15:30까지 연속 운영됩니다. 따라서 점심시간에 휴장한다는 설명은 틀렸습니다.
        - 동시호가 적용 시점: 동시호가는 장 시작과 장 종료 시 모두 적용됩니다. 장 개시 시점(08:30)과 장 종료 시점(15:30) 두 시점에서 동시호가를 적용하기 때문에 폐장 시간에만 적용된다는 설명은 정확하지 않습니다.
        - K-OTC시장의 가격 제한폭: K-OTC시장의 가격 제한폭은 전일 종가 대비 상하 30%로 설정되어 있습니다. 따라서 가격 제한폭이 30%가 아니라는 설명은 틀린 정보입니다.
        - K-OTC시장의 운영 시간: K-OTC시장(비상장주식시장)은 오전 9시부터 오후 4시까지 운영됩니다. 이 설명이 정확한 답변입니다.
        ### answer: G"""),
        # 5 options
    ]

    STOCK_MARKET_QA: list = [
        dedent("""\
        ### question: 다음 중 감가상각 방법으로 자산의 내용연수 동안 일정 비율로 상각하는 방식은 무엇인가?
        ### answer: 자산을 일정 비율로 상각하는 방법은 정률법입니다. 정률법은 자산의 감가상각비를 매기 일정 비율로 계산하여, 자산 가치가 점차 줄어드는 방식에 따라 상각하는 방법입니다."""),
        dedent("""\
        ### question: 경기선행지수(CLI)를 통해 경기 동향을 예측할 때 사용하는 주요 지표의 예를 세 가지 설명하시오.
        ### answer: 경기선행지수를 구성하는 주요 지표로는 산업활동 지표, 주택동향 지표, 금융통화 현황이 있습니다. 이들은 미래 경기 흐름을 예측하는 데 유용한 정보로, 각각 생산 수준, 부동산 경기, 금리 및 자금 공급 상황을 반영합니다."""),
        dedent("""\
        ### question: 금융채의 종류 중 하나로, 금융기관이 자금조달을 위해 발행하며 일반 채권보다 후순위에 있는 채권은 무엇인가?
        ### answer: 후순위채권은 금융기관이 자금 조달을 위해 발행하며, 일반 채권에 비해 상환 순위가 낮은 채권입니다. 이는 금융기관의 재정 상태가 악화될 경우, 다른 채권자들보다 늦게 상환받게 되는 위험이 있습니다."""),
        dedent("""\
        ### question: 한국의 투자자 D가 해외 펀드에 300,000달러를 투자했을 때 환율이 1달러=1,200원이었다가, 투자 회수 시점에 환율이 1달러=1,250원으로 상승했습니다. D가 환차익으로 얻게 될 금액은 얼마인가?
        ### answer: 투자 시점에 D는 300,000달러를 1,200원 환율로 계산하여 300,000 * 1,200 = 360,000,000원을 투자했습니다. 회수 시점에 환율이 1,250원으로 상승하여 투자 회수액은 300,000 * 1,250 = 375,000,000원이 됩니다. 따라서 D의 환차익은 375,000,000 - 360,000,000 = 15,000,000원입니다."""),
        dedent("""\
        ### question: 투자자가 행사가격이 70,000원인 풋옵션을 매수하고, 프리미엄으로 2,000원을 지불했습니다. 만기일에 주식의 시장가격이 65,000원으로 하락했다면, 투자자의 순이익은 얼마인가요?
        ### answer: 풋옵션 매입자는 시장가격이 65,000원으로 행사가격인 70,000원보다 낮기 때문에 옵션을 행사하는 것이 유리합니다.
        1. 옵션 행사로 얻는 이익은 70,000원(행사가격) - 65,000원(시장가격) = 5,000원입니다.
        2. 풋옵션 매입자는 프리미엄 2,000원을 지불했으므로, 최종 순이익은 5,000원 - 2,000원 = 3,000원이 됩니다.
        따라서 투자자의 순이익은 3,000원입니다."""),
        dedent("""\
        ### question: 어떤 날의 주식 시장에서 풋옵션 거래대금이 800억 원, 콜옵션 거래대금이 1,200억 원일 때 풋콜레이쇼를 구하고 그 의미를 설명하세요.
        ### answer: 풋콜레이쇼는 풋옵션 거래대금을 콜옵션 거래대금으로 나눈 후 100을 곱하여 계산합니다. 이 경우 풋콜레이쇼는 (800억 원 / 1,200억 원) * 100 = 66.67%입니다.
        풋콜레이쇼가 50%대 이상으로 나타난 것은 상승 추세가 어느 정도 진행되었음을 의미하며, 일정한 수준에서 조정이 올 수 있음을 시사합니다.
        따라서 현재 시장은 상승 추세의 마감 시점에 가까워지고 있다고 해석할 수 있습니다.""")
    ]

    FINANCIAL_AGENT_MCQA: list = [
        # 4 option
        dedent("""\
        주어진 데이터프레임을 바탕으로 질문에 맞는 코드를 고르세요.
        ### df.head()
        |      |    basDt | idxNm     | idxCsf       |   epyItmsCnt |   clpr |    vs |   fltRt |   mkp |   hipr |   lopr |    trqu |       trPrc |   lstgMrktTotAmt |   lsYrEdVsFltRg |   lsYrEdVsFltRt |   yrWRcrdHgst |   yrWRcrdHgstDt |   yrWRcrdLwst |   yrWRcrdLwstDt |   basPntm |   basIdx |
        |-----:|---------:|:----------|:-------------|-------------:|-------:|------:|--------:|------:|-------:|-------:|--------:|------------:|-----------------:|----------------:|----------------:|--------------:|----------------:|--------------:|----------------:|----------:|---------:|
        | 8764 | 20231011 | 섬유·의류 | KOSDAQ시리즈 |           20 |  85.16 |  0.99 |    1.18 | 83.92 |  85.44 |  83.92 | 2859175 |  8421734793 |    1770198600670 |             -19 |          -18.26 |        107.98 |        20230126 |             0 |        20231012 |  19960701 |     1000 |
        | 8922 | 20231010 | 섬유·의류 | KOSDAQ시리즈 |           20 |  84.17 | -1.29 |   -1.51 | 85.3  |  85.97 |  83.93 | 4461689 | 12270740072 |    1751357859672 |             -20 |          -19.21 |        107.98 |        20230126 |             0 |        20231011 |  19960701 |     1000 |
        | 9080 | 20231006 | 섬유·의류 | KOSDAQ시리즈 |           20 |  85.46 |  1.45 |    1.73 | 83.98 |  85.61 |  83.81 | 5813529 | 13185870702 |    1775773437638 |             -19 |          -17.98 |        107.98 |        20230126 |             0 |        20231010 |  19960701 |     1000 |
        | 9238 | 20231005 | 섬유·의류 | KOSDAQ시리즈 |           20 |  84.01 | -0.13 |   -0.15 | 84.27 |  85.25 |  83.51 | 4669131 | 16721170963 |    1748222051433 |             -20 |          -19.37 |        107.98 |        20230126 |             0 |        20231006 |  19960701 |     1000 |
        | 9396 | 20231004 | 섬유·의류 | KOSDAQ시리즈 |           20 |  84.14 | -2.06 |   -2.39 | 85.5  |  85.5  |  83.66 | 2469738 |  6777257332 |    1750728154281 |             -20 |          -19.24 |        107.98 |        20230126 |             0 |        20231005 |  19960701 |     1000 |

        ### question: 주어진 데이터에서 'clpr' 컬럼을 DataFrame 형태로 변환하려고 합니다. 이를 수행하는 데 적합한 Pandas 함수를 선택하세요.
        ### options:
        A. ```python
        df['clpr'].to_frame()
        ```
        B. ```python
        df['clpr'].to_list()
        ```
        C. ```python
        pd.DataFrame(df['clpr'])
        ```
        D. ```python
        df[['clpr']]
        ```
        ### answer: A
        ### reasoning_process:
        'clpr' 컬럼을 DataFrame으로 변환하려면 Pandas의 to_frame() 메서드를 사용할 수 있습니다.
        이 함수는 단일 Series를 DataFrame 형태로 변환하는 데 적합합니다.
        to_list()는 Series를 리스트로 변환하고, pd.DataFrame()을 사용하면 일부 기능이 중복되며, 단순히 df[['clpr']]을 사용하면 원본 DataFrame의 일부분을 선택할 뿐 변환 작업이 아니므로 필요 조건을 충족하지 않습니다."""),
        dedent("""\
        주어진 데이터프레임을 보고 질문에 요구에 알맞는 코드를 선택하시요.
        ### df.head()
        |    | Symbol    | Series   | Date        |   Prev Close |   Open Price |   High Price |   Low Price |   Last Price |   Close Price |   Average Price |   Total Traded Quantity |    Turnover |   No. of Trades |   Deliverable Qty |   % Dly Qt to Traded Qty |
        |---:|:----------|:---------|:------------|-------------:|-------------:|-------------:|------------:|-------------:|--------------:|----------------:|------------------------:|------------:|----------------:|------------------:|-------------------------:|
        |  0 | GODREJIND | EQ       | 15-May-2017 |       564.6  |       581    |       584    |      568.5  |       578.9  |        578.55 |          578.09 |                  797171 | 4.60836e+08 |           21649 |            360927 |                    45.28 |
        |  1 | GODREJIND | EQ       | 16-May-2017 |       578.55 |       581.45 |       589    |      572.25 |       583.8  |        584.8  |          583.6  |                  500223 | 2.9193e+08  |           17204 |            210364 |                    42.05 |
        |  2 | GODREJIND | EQ       | 17-May-2017 |       584.8  |       583    |       594    |      576.85 |       584.9  |        588.6  |          588.74 |                  504155 | 2.96815e+08 |            8567 |            261667 |                    51.9  |
        |  3 | GODREJIND | EQ       | 18-May-2017 |       588.6  |       582    |       588.85 |      571.2  |       572.25 |        574.6  |          580.9  |                  223583 | 1.29879e+08 |            7144 |             99785 |                    44.63 |
        |  4 | GODREJIND | EQ       | 19-May-2017 |       574.6  |       581    |       585.8  |      567.55 |       579.85 |        578    |          577.31 |                  245436 | 1.41692e+08 |            4969 |             68041 |                    27.72 |
        ### question: "종가" 열의 평균 값을 계산합니다.
        ### options:
        A. ```python
        df['Close Price'].mean()
        ```
        B. ```python
        df['Close_Price'].mean()
        ```
        C. ```python
        df['Total Traded Quantity'].median()
        ```
        D. ```python
        sum(df['Close Price']) / len(df['Close_Price'])
        ```
        ### answer: A
        ### reasoning_process:
        "종가" 열의 평균을 계산하기 위해 데이터프레임의 열 이름을 확인합니다. 데이터프레임에는 'Close Price'라는 열이 존재하며, 이 열이 "종가"를 나타냅니다.
        Pandas에서 평균을 계산하는 방법으로는 mean() 메서드를 사용하는 것이 가장 간단하고 효율적입니다. 
        이후 각 코드 구문을 검토하여 'Close Price' 열의 평균을 정확히 계산할 수 있는 구문을 선택합니다.
        불필요한 연산이나 잘못된 열 이름을 사용한 구문은 오류가 발생하거나 비효율적일 수 있으므로 제외합니다.
        최종적으로, 'Close Price' 열을 정확히 참조하고 mean() 메서드를 사용한 구문이 올바른 선택임을 확인합니다."""),
        # 5 options
        dedent("""\
        다음 데이터프레임을 바탕으로 보기중에서 맞는 것을 고르시오.
        ### df.head()
        |      |    basDt | idxNm                           |   clpr |    vs |   fltRt |    mkp |   hipr |   lopr |   trqu |   trPrc |
        |-----:|---------:|:--------------------------------|-------:|------:|--------:|-------:|-------:|-------:|-------:|--------:|
        | 4225 | 20231129 | KRX Cboe 코스피 200 풋매도 지수 | 196.73 | -0.04 |   -0.02 | 196.78 | 196.78 | 195.98 |      0 |       0 |
        | 4435 | 20231128 | KRX Cboe 코스피 200 풋매도 지수 | 196.77 |  0.62 |    0.32 | 196.08 | 196.82 | 196.02 |      0 |       0 |
        | 4645 | 20231127 | KRX Cboe 코스피 200 풋매도 지수 | 196.15 |  0.1  |    0.05 | 195.74 | 196.27 | 195.31 |      0 |       0 |
        | 4855 | 20231124 | KRX Cboe 코스피 200 풋매도 지수 | 196.05 | -0.56 |   -0.28 | 196.33 | 196.54 | 195.64 |      0 |       0 |
        | 5065 | 20231123 | KRX Cboe 코스피 200 풋매도 지수 | 196.61 | -0.01 |   -0.01 | 196.05 | 196.61 | 195.93 |      0 |       0 |
        ### question: 주어진 데이터에서 'idxNm'을 기준으로 열을 행으로 변환하려고 합니다. 이를 수행하는 데 적합한 Pandas 함수를 선택하세요.
        ### options:
        A. ```python
        df.set_index(['idxNm']).unstack()
        ```
        B. ```python
        df.pivot(index='idxNm', columns='basDt', values='clpr')
        ```
        C. ```python
        df.melt(id_vars=['idxNm'])
        ```
        D. ```python
        df.stack(level='idxNm')
        ```
        E. ```python
        df.transpose()
        ```
        ### answer: A
        ### reasoning_process:
        'idxNm'을 기준으로 열을 행으로 변환하려면 unstack() 함수를 사용하는 것이 적합합니다.
        unstack() 함수는 MultiIndex에서 특정 레벨을 기준으로 열과 행을 변환할 수 있도록 도와줍니다.
        pivot()은 특정 값을 재배치하여 행과 열을 바꾸는 데 사용되지만, 여기서는 'idxNm'을 기준으로 변환할 때 유용하지 않습니다.
        melt()는 데이터를 길게 만드는 데 사용되며, stack()은 전체 DataFrame의 계층적 인덱스를 재구성하지만, 원하는 방식과 다를 수 있습니다.
        transpose()는 DataFrame의 전체 행과 열을 바꾸는 데 사용되므로 여기서는 적절하지 않습니다."""),
        dedent("""\
        다음 데이터프레임을 보고 선택지 중 맞는 것을 고르시오.
        ### df.head()
        |       | Symbol     | Series   | Date        | Prev Close   | Open Price   | High Price   | Low Price   | Last Price   | Close Price   | Average Price   | Total Traded Quantity   | Turnover        | No. of Trades   | Deliverable Qty   |   % Dly Qt to Traded Qty |
        |------:|:-----------|:---------|:------------|:-------------|:-------------|:-------------|:------------|:-------------|:--------------|:----------------|:------------------------|:----------------|:----------------|:------------------|-------------------------:|
        | 14147 | SANGHVIMOV | EQ       | 03-Jul-2024 | 1,090.20     | 1,092.00     | 1,111.00     | 1,082.50    | 1,086.00     | 1,087.90      | 1,098.32        | 2,53,987                | 27,89,59,774.95 | 14,982          | 1,30,294          |                    51.3  |
        | 14148 | SANGHVIMOV | EQ       | 04-Jul-2024 | 1,087.90     | 1,094.25     | 1,103.45     | 1,077.50    | 1,100.90     | 1,097.70      | 1,094.20        | 2,76,192                | 30,22,10,617.30 | 16,489          | 1,83,247          |                    66.35 |
        | 14149 | SANGHVIMOV | EQ       | 05-Jul-2024 | 1,097.70     | 1,106.05     | 1,134.50     | 1,106.05    | 1,120.00     | 1,120.10      | 1,124.02        | 4,84,391                | 54,44,66,739.85 | 23,010          | 1,89,545          |                    39.13 |
        | 14150 | SANGHVIMOV | EQ       | 08-Jul-2024 | 1,120.10     | 1,134.00     | 1,143.00     | 1,125.30    | 1,130.00     | 1,130.95      | 1,134.84        | 2,50,403                | 28,41,68,445.90 | 19,478          | 1,39,817          |                    55.84 |
        | 14151 | SANGHVIMOV | EQ       | 09-Jul-2024 | 1,130.95     | 1,148.00     | 1,148.00     | 1,100.50    | 1,105.00     | 1,104.90      | 1,121.56        | 2,87,269                | 32,21,89,050.25 | 21,041          | 1,41,676          |                    49.32 |
        ### question: 'Close Price'가 1100보다 큰 경우 해당 값을 NaN으로 바꾸고 싶습니다. 이를 수행하는 데 적합한 Pandas 함수를 선택하세요.
        ### options:
        A. ```python
        df['Close Price'] = df['Close Price'].mask(df['Close Price'] > 1100)
        ```
        B. ```python
        df['Close Price'] = df['Close Price'].where(df['Close Price'] <= 1100)
        ```
        C. ```python
        df['Close Price'] = df['Close Price'].fillna(1100)
        ```
        D. ```python
        df['Close Price'] = df['Close Price'].replace(df['Close Price'] > 1100, np.nan)
        ```
        E. ```python
        df['Close Price'] = df['Close Price'].apply(lambda x: np.nan if x > 1100 else x)
        ```
        ### answer: A
        ### reasoning_process:
        특정 조건을 만족하는 값을 NaN으로 바꾸려면 mask() 함수를 사용하는 것이 적합합니다.
        mask() 함수는 조건이 참인 경우 해당 값을 NaN으로 변경하고, 그렇지 않은 경우 원래 값을 유지합니다.
        where() 함수는 조건이 거짓일 때만 NaN으로 바꾸므로 반대의 기능을 수행합니다.
        fillna()는 NaN 값을 채우는 함수로, 여기서는 적절하지 않습니다.
        replace()는 대체할 값을 지정하는 데 사용되며, lambda와 함께 apply()를 사용하는 방식은 가능하지만 비효율적입니다.
        따라서 mask() 함수를 사용하는 것이 가장 간단하고 효과적인 방법입니다."""),
        # 6 options
        dedent("""\
        ### df.head()
        |      | Symbol   | Series   | Date        | Prev Close   | Open Price   | High Price   | Low Price   | Last Price   | Close Price   | Average Price   | Total Traded Quantity   | Turnover          | No. of Trades   | Deliverable Qty   |   % Dly Qt to Traded Qty |
        |-----:|:---------|:---------|:------------|:-------------|:-------------|:-------------|:------------|:-------------|:--------------|:----------------|:------------------------|:------------------|:----------------|:------------------|-------------------------:|
        | 6937 | GODREJCP | EQ       | 19-Dec-2023 | 1,030.60     | 1,033.00     | 1,057.95     | 1,027.30    | 1,049.00     | 1,050.35      | 1,044.91        | 10,62,259               | 1,10,99,63,975.20 | 39,674          | 5,89,521          |                    55.5  |
        | 6938 | GODREJCP | EQ       | 20-Dec-2023 | 1,050.35     | 1,055.90     | 1,069.30     | 1,040.85    | 1,040.85     | 1,050.35      | 1,056.49        | 15,26,082               | 1,61,22,95,046.30 | 74,694          | 10,47,951         |                    68.67 |
        | 6939 | GODREJCP | EQ       | 21-Dec-2023 | 1,050.35     | 1,045.00     | 1,075.00     | 1,025.80    | 1,074.00     | 1,072.90      | 1,050.45        | 23,98,325               | 2,51,93,26,619.60 | 52,672          | 17,73,322         |                    73.94 |
        | 6940 | GODREJCP | EQ       | 22-Dec-2023 | 1,072.90     | 1,076.15     | 1,078.25     | 1,065.05    | 1,071.30     | 1,074.25      | 1,071.13        | 13,48,188               | 1,44,40,88,789.50 | 43,778          | 9,83,126          |                    72.92 |
        | 6941 | GODREJCP | EQ       | 26-Dec-2023 | 1,074.25     | 1,080.00     | 1,096.00     | 1,074.25    | 1,092.50     | 1,093.05      | 1,086.85        | 5,76,355                | 62,64,11,033.70   | 42,847          | 3,20,334          |                    55.58 |
        ### question:
        "거래량" 열의 중간 값을 계산하려고 합니다. 이를 수행하는 데 적합한 Pandas 함수를 선택하세요.
        ### options:
        A. ```python
        df['Total Traded Quantity'].median()
        ```
        B. ```python
        df['Total Traded Quantity'].mean()
        ```
        C. ```python
        df['Total Traded Quantity'].sum()
        ```
        D. ```python
        df['Total Traded Quantity'].mode()
        ```
        E. ```python
        df['Total Traded Quantity'].min()
        ```
        F. ```python
        df['Total Traded Quantity'].max()
        ```
        ### answer: A
        ### reasoning_process:
        "거래량" 열의 중간값을 계산하려면 median() 메서드를 사용하는 것이 적합합니다. median() 함수는 지정된 열의 중앙값을 반환하는 기능을 가지고 있습니다.
        mean()은 평균값을 계산하고, sum()은 모든 값을 더하며, mode()는 가장 빈번한 값을 찾고, min()과 max()는 각각 최소값과 최대값을 반환합니다.
        이 문제에서는 중간값을 요구하므로 median()이 올바른 선택입니다."""),
        dedent("""\
        다음 문제를 보고 정답을 고르세요.
        ### df.head()
        ### question: "거래량" 열을 데이터프레임에서 제거하려고 합니다. 이를 수행하는 데 적합한 Pandas 함수를 선택하세요.
        ### options:
        A. ```python
        df.drop('Total Traded Quantity', axis=1)
        ```
        B. ```python
        df.remove('Total Traded Quantity')
        ```
        C. ```python
        df.pop('Total Traded Quantity')
        ```
        D. ```python
        df.drop(['Total Traded Quantity'], axis=0)
        ```
        E. ```python
        del df['Total Traded Quantity']
        ```
        F. ```python
        df.drop_column('Total Traded Quantity')
        ```
        ### answer: A
        ### reasoning_process:
        데이터프레임에서 특정 열을 제거하려면 drop() 메서드를 사용하여 해당 열 이름을 지정하고, axis=1을 설정해 열 방향으로 삭제해야 합니다.
        remove()와 drop_column()은 Pandas에 존재하지 않는 메서드명이며, pop()과 del은 열을 삭제할 수 있지만 drop()보다 명시적이지 않습니다.
        drop() 메서드는 특히 axis를 지정하여 쉽게 열을 제거할 수 있으므로 명확하고 효율적인 선택입니다."""),
        dedent("""\
        다음 데이터프레임을 바탕으로 보기중 옳은 것을 고르세요.
        ### df.head()
        |      |    basDt | prdCtg                 | srtnCd   | isinCd       | itmsNm                               |   clpr |   vs |   mkp |   hipr |   lopr |   nxtDdBsPrc |   iptVlty |   trqu |   trPrc |   opnint |
        |-----:|---------:|:-----------------------|:---------|:-------------|:-------------------------------------|-------:|-----:|------:|-------:|-------:|-------------:|----------:|-------:|--------:|---------:|
        | 2627 | 20231228 | 파생 옵션 SK이노베이션 | 241V3067 | KR4241V30678 | SK이노베이 C 202403    96,000(  10)  |      0 |    0 |     0 |      0 |      0 |        45000 |      33.1 |      0 |       0 |        0 |
        | 2628 | 20231228 | 파생 옵션 SK이노베이션 | 241V3069 | KR4241V30694 | SK이노베이 C 202403    92,000(  10)  |      0 |    0 |     0 |      0 |      0 |        49000 |      33.1 |      0 |       0 |        0 |
        | 2629 | 20231228 | 파생 옵션 SK이노베이션 | 241V6009 | KR4241V60097 | SK이노베이 C 202406   118,000(  10)* |      0 |    0 |     0 |      0 |      0 |        27400 |      33.1 |      0 |       0 |        0 |
        | 2630 | 20231228 | 파생 옵션 SK이노베이션 | 241V6012 | KR4241V60121 | SK이노베이 C 202406   127,900(  10)* |      0 |    0 |     0 |      0 |      0 |        20400 |      33.1 |      0 |       0 |        0 |
        | 2631 | 20231228 | 파생 옵션 SK이노베이션 | 241V6013 | KR4241V60139 | SK이노베이 C 202406   137,700(  10)* |      0 |    0 |     0 |      0 |      0 |        14800 |      33.1 |      0 |       0 |        0 |
        ### question: MultiIndex DataFrame에서 특정 레벨을 제거하려고 합니다. 이를 수행하는 데 적합한 Pandas 함수를 선택하세요.
        ### options:
        A. ```python
        df.droplevel(level=0)
        ```
        B. ```python
        df.drop(level=0)
        ```
        C. ```python
        df.reset_index(level=0, drop=True)
        ```
        D. ```python
        df.drop_index(level=0)
        ```
        E. ```python
        df.remove_level(level=0)
        ```
        F. ```python
        df.drop_level(level=0)
        ```
        G. ```python
        df.index.drop(level=0)
        ```
        ### answer: A
        ### reasoning_process:
        MultiIndex에서 특정 레벨을 제거하려면 droplevel() 메서드를 사용하는 것이 적합합니다.
        droplevel()은 지정된 인덱스 레벨을 삭제하여 데이터프레임의 구조를 단순화할 수 있습니다.
        reset_index()는 인덱스를 리셋하며, level과 drop 옵션을 사용하여 유사한 작업을 수행할 수 있지만, 인덱스 전체를 재설정하기 때문에 목적과 조금 다를 수 있습니다.
        drop(), remove_level(), drop_index()와 같은 메서드는 Pandas에서 제공되지 않거나 다른 목적에 사용되므로 droplevel()이 가장 적합한 선택입니다."""),
        dedent("""\
        다음 데이터프레임을 바탕으로 물음에 답하세요.
        ### df.head()
        |      | Symbol     | Series   | Date        |   Prev Close |   Open Price |   High Price |   Low Price |   Last Price |   Close Price |   Average Price | Total Traded Quantity   | Turnover        | No. of Trades   | Deliverable Qty   |   % Dly Qt to Traded Qty |
        |-----:|:-----------|:---------|:------------|-------------:|-------------:|-------------:|------------:|-------------:|--------------:|----------------:|:------------------------|:----------------|:----------------|:------------------|-------------------------:|
        | 2090 | ASTRAMICRO | EQ       | 20-Mar-2024 |       550.8  |       555.65 |       555.65 |      532.05 |        533   |        535.45 |          540.11 | 2,10,877                | 11,38,95,972.00 | 10,102          | 1,16,701          |                    55.34 |
        | 2091 | ASTRAMICRO | EQ       | 21-Mar-2024 |       535.45 |       540.75 |       548.3  |      536    |        540   |        538.35 |          541.57 | 2,68,819                | 14,55,84,469.50 | 13,489          | 1,42,374          |                    52.96 |
        | 2092 | ASTRAMICRO | EQ       | 22-Mar-2024 |       538.35 |       545    |       560.4  |      540.8  |        557   |        557.3  |          552.81 | 1,98,252                | 10,95,96,018.05 | 10,910          | 85,372            |                    43.06 |
        | 2093 | ASTRAMICRO | EQ       | 26-Mar-2024 |       557.3  |       559.4  |       559.4  |      545.1  |        545.1 |        546.1  |          548.29 | 1,68,032                | 9,21,29,616.35  | 11,559          | 1,13,643          |                    67.63 |
        | 2094 | ASTRAMICRO | EQ       | 27-Mar-2024 |       546.1  |       552    |       556.6  |      530    |        545   |        544.2  |          547.44 | 3,37,445                | 18,47,29,843.20 | 12,799          | 2,17,943          |                    64.59 |
        ### question: "거래량" 열에서 가장 높은 3개의 값을 선택하려고 합니다. 이를 수행하는 데 적합한 Pandas 함수를 선택하세요.
        ### options:
        A. ```python
        df['Total Traded Quantity'].nlargest(3)
        ```
        B. ```python
        df['Total Traded Quantity'].sort_values().head(3)
        ```
        C. ```python
        df['Total Traded Quantity'].sort_values(ascending=False).head(3)
        ```
        D. ```python
        df['Total Traded Quantity'].nsmallest(3)
        ```
        E. ```python
        df['Total Traded Quantity'].max(3)
        ```
        F. ```python
        df['Total Traded Quantity'].top(3)
        ```
        G. ```python
        df['Total Traded Quantity'].largest(3)
        ```
        ### answer: A
        ### reasoning_process:
        특정 열에서 상위 몇 개의 값을 선택하려면 nlargest() 메서드를 사용하는 것이 적합합니다.
        nlargest()는 지정한 개수만큼 큰 값을 내림차순으로 반환합니다.
        sort_values()를 사용하여 내림차순 정렬 후 상위 값만 선택하는 방법도 가능하지만, nlargest()가 더 효율적이고 직관적입니다.
        nsmallest()는 최솟값을 반환하며, max()와 largest(), top() 같은 메서드는 Pandas에서 지원하지 않으므로 적합하지 않습니다.""")
    ]